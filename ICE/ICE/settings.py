"""
Django settings for ICE project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from django.urls import reverse_lazy


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g47l^lj3ha)b_726#3omki$x=fn($@cq0*ozogcy7c*yn^q@83'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # add the 'embed_video`
    'embed_video',
    # add courses to the INSTALL_APPS setting as follows
    'courses.apps.CoursesConfig',
    # student registration
    'students.apps.StudentsConfig', 
    # display statistics for Memcached instances in the admin site
    'memcache_status',
    # REST framework
    'rest_framework',
    # alluth
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.github',
    # myccount
    'myaccount',
    # invitations: email
    'invitations',
    # crispy_forms
    'crispy_forms',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # allow per-site cache: place before CommonMiddleware since it runs during response time when middlewares are executed in reverse order
    'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.common.CommonMiddleware',
    # allow per-site cache: place after ComminMiddleware because it needs to access request data set by the latter
    'django.middleware.cache.FetchFromCacheMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ICE.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ICE.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

# base URL to serve uploaded media files
MEDIA_URL = '/media/'
# local path where the files are located
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# default cache for our cache middleware
CACHE_MIDDLEWARE_ALIAS = 'default'
# glocal cachetimeout to 15 min
CACHE_MIDDLEWARE_SECONDS = 60 * 15 # 15 minutes
# specify a prefix for all cache keys to avoid collisions
#   in case we use the same Memcached backend for multiple projects
CACHE_MIDDLEWARE_KEY_PREFIX = 'ICE'

# Configure the cache for ICE project
""" 
Using the `MemcachedCache` backend.
Specify location using the `address:port` notation
 """
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
    }
}

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ]
        
}

# allauth
SITE_ID = 1


# The setting used by the `auth` module to redirect the user to 
    # after successfully login if no next parameter is present in the request
    # after successfully login, students will be redirected to the `student_course_list` URL 
    #   to view the courses that they are enrolled in
# LOGIN_REDIRECT_URL = reverse_lazy('student_course_list')
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_REQUIRED = True
LOGIN_REDIRECT_URL = '/myaccounts/profile/'

# # Make email verification mandatory to avoid junk email accounts
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'

ACCOUNT_SIGNUP_FORM_CLASS = 'myaccount.forms.SignupForm'

# send email

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

# Email Setting
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = 'wongyatchun@163.com'
EMAIL_HOST_PASSWORD = '1qaz2wsx'
EMAIL_USE_TLS = True
EMAIL_FROM = 'wongyatchun@163.com'
DEFAULT_FROM_EMAIL = 'wongyatchun@163.com'
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Add to settings.py
ACCOUNT_ADAPTER = 'invitations.models.InvitationsAdapter'

# Invitations: URL name of your signup URL.
INVITATIONS_SIGNUP_REDIRECT = 'myaccount:account_instructorsignup'